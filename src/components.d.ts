/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface CodeFlask {
      'content': string;
      'language': string;
      'lineNumbers': boolean;
      'rtl': boolean;
    }
  }

  interface HTMLCodeFlaskElement extends StencilComponents.CodeFlask, HTMLStencilElement {}

  var HTMLCodeFlaskElement: {
    prototype: HTMLCodeFlaskElement;
    new (): HTMLCodeFlaskElement;
  };
  interface HTMLElementTagNameMap {
    'code-flask': HTMLCodeFlaskElement;
  }
  interface ElementTagNameMap {
    'code-flask': HTMLCodeFlaskElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'code-flask': JSXElements.CodeFlaskAttributes;
    }
  }
  namespace JSXElements {
    export interface CodeFlaskAttributes extends HTMLAttributes {
      'content'?: string;
      'language'?: string;
      'lineNumbers'?: boolean;
      'onChange'?: (event: CustomEvent) => void;
      'rtl'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;